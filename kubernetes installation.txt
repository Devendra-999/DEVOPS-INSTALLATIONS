
sudo swapoff -a
curl https://get.docker.com/ | bash
2) Install kubelet, kubeadm and kubectl
Once the servers are rebooted, add Kubernetes repository for Ubuntu 22.04 to all the servers.

sudo apt install curl apt-transport-https -y
curl -fsSL  https://packages.cloud.google.com/apt/doc/apt-key.gpg|sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/k8s.gpg
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
Then install required packages.

sudo apt update
sudo apt install wget curl vim git kubelet kubeadm kubectl -y
sudo apt-mark hold kubelet kubeadm kubectl
kubectl version --client && kubeadm version

kubeadm init --pod-network-cidr 192.168.0.0/16 --kubernetes-version 1.20.2

kubeadm init --apiserver-advertise-address=172.31.22.165 --pod-network-cidr=192.168.0.0/16 --ignore-preflight-errors=Numcpu  

kubectl apply -f https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/rbac-kdd.yaml   

kubectl apply -f https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yml        
-
-
- 
token-----------
 

kubectl get pods
kubectl get nodes
 kubectl apply (network plugin)
kubectl get pods -A
-------------------------------------------------------------------------------------------------------------------------

sudo apt-get update && sudo apt-get install apt-transport-https -y
sudo su -
sudo curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -

cat <<EOF | sudo tee etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/kubernetes-xenial main
EOF

sudo apt-get update

#Disable sap memory for better performance

swapoff -a
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

Enable IP tables
 # We need to enable IT tables pod to pd communication
 modprobe br_netfilter
sysctl -p
sudo syctl net.bridge.bridge-nf-call-iptables=1

install docker on both master and worker node
apt-get install docker.io. -y

Add ubuntu ser to docker group
usermod -aG docker ubuntu
systemctl restart docker
systemctl enable docker.service
type exit to come out of from root user


Install kuernetes module

sudo apt-get install -y kubelet kubeadm kubectl kubernetes-cni
sudo systemctl daemon-reload
sudo systemctl start kubelet
sudo systemctl enable kubelet.service
cd /etc/dock4dtd

100


I faced similar issue recently. The problem was cgroup driver. Kubernetes cgroup driver was set to systems but docker was set to systemd. So I created /etc/docker/daemon.json and added below:

{
    "exec-opts": ["native.cgroupdriver=systemd"]
}
Then

 sudo systemctl daemon-reload
 sudo systemctl restart docker
 sudo systemctl restart kubelet





execute below commands in root user in master node
sudo su -
kubeadm init

 mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

install weanet add 0n

kubectl apply -f"https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
kubectl get pods --all-namespaces


kubeadm join 172.31.36.25:6443 --token c0rcc5.lc9adcu6mckn2nri \
        --discovery-token-ca-cert-hash sha256:41569fec9b8236477f0cb1163e1cb0893e0c87e28205a3d759bce088e129077e


kubeadm join 172.31.94.117:6443 --token 6h0rj6.8prbcenutdtxsnfb \
        --discovery-token-ca-cert-hash sha256:01173ba1cce8267ca679e6cc3768da72a4f83adcc298ee2d0f0892106d7b5f93



kubeadm join 172.31.90.55:6443 --token wtqxgd.7pky1b5yme8jxg7w \
        --discovery-token-ca-cert-hash sha256:caf0b711a8e8a0d587a5f4106b533eab664f3428776f51973a2059493cd16c

sudo kubeadm join 172.31.90.55:6443 --token wtqxgd.7pky1b                                                         5yme8jxg7w \scovery-token-ca-cert-hash sha256:caf0b711a8e8a0d587a5f4106b533eab5b                                                                 --discovery-token-ca-cert-hash sha256:caf0b711a8e8a0d587a5f4106b533eab5b                                                                                                                  664f3428776f51973a20594                                                         93cd16c
accepts at

vim metrics.yaml
manager@workernode:~$ kubectl apply -f metrics.yaml
kubectl create deployment sample --image=nginx

